!function(){"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var t=e(require("node-fetch")),a=e(require("ipfs-http-client")),r=e(require("ipfs-unixfs-importer")),s=require("stream"),o=e(require("p-queue")),i=require("@octokit/rest"),n=require("@octokit/plugin-retry");require("crypto");const c=e=>!!e.success;let l,h=0;const d=async e=>l&&h<=200?(h++,l):(h=0,l=await(async e=>Object.entries(await e).map(([e,t])=>`${e}=${t}`).join("; "))((async e=>{const a=(await t("https://lihkg.com/",{headers:{Host:"lihkg.com",Referer:"https://lihkg.com/","User-Agent":e,Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Language":"en-US","Accept-Encoding":"gzip, deflate, br"}})).headers.raw()["set-cookie"];return Object.fromEntries(a.map(e=>{const t=e.match(/^(\w+)=(.+?);/);return[t[1],t[2]]}))})(e)),l),p="Mozilla/5.0 Gecko/20100101 Firefox/71.0",u=2e4;class m{static async fetchAPIResponse(e){const a=await d(p),r=await t(e,{headers:{Referer:"https://lihkg.com/","User-Agent":p,Cookie:a}});if(!r.ok)throw console.error(await r.text()),new Error(`${e} ${r.status} ${r.statusText}`);const s=await r.json();if(!c(s))throw new Error(`${e} ${s.error_code} ${s.error_message}`);return s}static async fetchThreadDetail(e,t=1,a="reply_time"){const r=`${this.ENDPOINT}/thread/${e}/page/${t}?order=${a}`;return(await this.fetchAPIResponse(r)).response}static async fetchFullThread(e){const t=await this.fetchThreadDetail(e,1),{total_page:a,item_data:r}=t;return r.push(...(await Promise.all(Array.from({length:a-2}).map(async(t,a)=>{return(await this.fetchThreadDetail(e,a+2)).item_data}))).flat()),t.page=void 0,t}static async fetchUser(e){const t=`${this.ENDPOINT}/user/${e}/profile`;return(await this.fetchAPIResponse(t)).response.user}static async fetchLatestThreads(e=1,t=1){const a=`${this.ENDPOINT}/thread/latest?cat_id=${t}&page=${e}&count=60&type=now`;return(await this.fetchAPIResponse(a)).response}}m.ENDPOINT="https://lihkg.com/api_v2";const f=m.fetchFullThread.bind(m);m.fetchUser.bind(m);class g{static formatTime(e){return new Date(1e3*e)}static formatReply(e){return{pid:e.post_id,tid:+e.thread_id,uid:+e.user.user_id,like:+e.like_count,dislike:+e.dislike_count,score:+e.vote_score,quote:e.quote&&this.formatReply(e.quote),citedBy:+e.no_of_quote,replyTime:this.formatTime(e.reply_time),msg:e.msg}}static formatThread(e){return{tid:+e.thread_id,cid:+e.cat_id,subCid:+e.sub_cat_id,title:e.title,createTime:this.formatTime(e.create_time),updateTime:this.formatTime(e.last_reply_time),uid:+e.user_id,like:+e.like_count,dislike:+e.dislike_count,uniUserReply:+e.no_of_uni_user_reply,remark:e.remark&&e.remark.notice}}static formatThreadDetail(e){return{...this.formatThread(e),replies:e.item_data.map(e=>this.formatReply(e)),pinned:e.pinned_post&&this.formatReply(e.pinned_post)}}static formatThreadInfo(e){return{...this.formatThread(e),lastReplyTime:this.formatTime(e.last_reply_time),lastReplyUid:+e.last_reply_user_id}}static formatThreadMinInfo(e){return{tid:+e.thread_id,cid:+e.cat_id,uid:+e.user_id,title:e.title,score:+e.like_count-+e.dislike_count,replied:e.last_reply_time,pages:+e.total_page}}static formatUserInfo(e){return{uid:+e.user_id,name:e.nickname,gender:e.gender,level:+e.level,levelName:e.level_name,createTime:this.formatTime(e.create_time)}}}const w={put(){}},y=a("https://ipfs.infura.io:5001/"),_=async e=>{const t=[{content:e}];let a;for await(const e of r(t,w,{onlyHash:!0}))a=e.cid;return a},k=async e=>{try{let t;for await(const a of y.add(e,{pin:!0}))t=a.cid;return t}catch(e){console.error(e.name,":",e.message)}},$=new o({concurrency:10}),T=/https?:\/\/(?:www\.)?na\.cx\/i\/(\w+\.\w+)/g;async function b(e,a=!1){const r=await t(e,{headers:{Referer:"https://lihkg.com/","User-Agent":p},timeout:u});if(!r.ok)throw new Error(`${e} ${r.status} ${r.statusText}`);if(a)return r.body;return await r.buffer()}const O=e=>Promise.all(e.replies.map(e=>{const t=[...e.msg.matchAll(T)];return Promise.all(t.map(async t=>{const[a,r]=t;try{const t=await(async(e,t=!1)=>{let a,r;if(t){const t=await b(e,!0),o=t.pipe(new s.PassThrough),i=t.pipe(new s.PassThrough);a=$.add(()=>k(o)),r=await _(i)}else{const t=await b(e);a=$.add(()=>k(t)),r=await _(t)}return a.then(t=>{t&&r&&t.equals(r)?console.log(`uploaded ${e} : ${r}`):console.error(`upload ${e} error: cid mismatches`)}),r.toString()})(a);e.msg=e.msg.replace(new RegExp(a,"g"),`https://ipfs.infura.io/ipfs/${t}?filename=${r}`)}catch(e){console.error(e)}}))})),R=process.env.AUTH_TOKEN;if(!R)throw new Error("AUTH_TOKEN is undefined");const q=new(i.Octokit.plugin(n.retry))({auth:R}),E={email:"lihkg@github.com",name:"lihkg"},A="lihkg-boy",I="archive-program",j=e=>{return+e.toString().slice(-1)[0]},v=e=>`${(new Date).toISOString()} update\n${e.join(",")}`;class D{constructor(){this.threads={}}add(e,t){const a=j(e);this.threads[a]||(this.threads[a]={}),this.threads[a][e]=t}async commit(e){const t=await q.git.getTree({owner:A,repo:I,tree_sha:e}),a=t.data.tree.filter(e=>"blob"!==e.type),r=t.data.sha,s={};for(const[e,t]of Object.entries(this.threads))try{console.log("subtree",e);const r=a[+e];if(r.path!==e)throw new Error(`tree invalid: ${JSON.stringify(r)}`);const o=r.sha,i=Object.entries(t).map(([e,t])=>({path:`${e}.json`,content:t,mode:"100644"})),n=(await q.git.createTree({owner:A,repo:I,tree:i,base_tree:o})).data.sha;console.log("updated subtree",e,n);const c=(await q.git.createCommit({owner:A,repo:I,tree:n,message:v(Object.entries(t).map(([e])=>+e)),parents:[o],author:E})).data.sha;await q.git.updateRef({owner:+e<5?"lihkg1":"lihkg2",repo:I,ref:`heads/${e}`,sha:c,force:!0}),console.log("updated branch",e,c),s[e]=c}catch(e){console.error(e)}console.log("updating the root tree");const o=Object.entries(s).map(([e,t])=>({path:e,mode:"160000",type:"commit",sha:t})),i=(await q.git.createTree({owner:A,repo:I,tree:o,base_tree:r})).data.sha;return console.log("updated root tree",i),i}}const N=async e=>{const t=await f(e),a=g.formatThreadDetail(t);return await O(a),JSON.stringify(a)};(async e=>{const t=await(async(e=15)=>{const t=new Set,a=t=>+new Date-+t>6e4*e;for(let e=1;;e++)try{const{items:r}=await m.fetchLatestThreads(e),s=r.map(e=>[+e.thread_id,g.formatTime(e.last_reply_time)]);if(s.forEach(([e,r])=>{a(r)||t.add(e)}),s.some(([,e])=>a(e)))break}catch(e){console.error(e);break}return[...t].reverse()})(),a=t.length;console.log(a,t);const r=new o({concurrency:e});let s=0;const i=new D;for(let e=0;e<a;e++){const o=t[e];r.add(async()=>{console.log(`update ${o}.json ${e+1}/${a}`);try{const e=await N(o);i.add(o,e),s++,console.log(`success ${o}.json ${s}/${a}`)}catch(e){console.error(e.name+" "+e.message)}})}await r.onIdle();const n=await(async()=>{const{data:{content:e}}=await q.repos.getContent({owner:"lihkg-backup",repo:"updater",path:"latest"});return Buffer.from(e,"base64").toString("utf-8").match(/\w{40}/)[0]})(),c=await i.commit(n),l=await(async(e,t,a,r="master")=>{const s=`heads/${r}`;console.log("old commit",a);const o=await q.git.createCommit({owner:A,repo:I,tree:e,message:t,parents:[a],author:E}),i=o.data.sha;o.data.tree=void 0,console.log("new commit",o.data);try{await q.git.updateRef({owner:"lihkg-backup2",repo:"threads",ref:s,sha:i,force:!0})}catch(e){console.error(e)}return i})(c,v(t),n);await(async e=>{const{data:{sha:t}}=await q.repos.getContent({owner:"lihkg-backup",repo:"updater",path:"latest"});await q.repos.createOrUpdateFileContents({owner:"lihkg-backup",repo:"updater",path:"latest",sha:t,content:Buffer.from(`https://github.com/github/${I}/tree/${e}\n`).toString("base64"),message:`${(new Date).toISOString()}`,author:E,committer:E})})(l),console.log(`${s}/${a} success`)})(50)}();
